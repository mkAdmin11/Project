server {

  	listen 443 ssl;

	server_name {{ domain.second }}{{ domain.first }};

	ssl_certificate /etc/letsencrypt/live/{{ domain.second }}{{ domain.first }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ domain.second }}{{ domain.first }}/privkey.pem;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		proxy_pass http://{{ ansible_facts.tun0.ipv4.address }}:8080;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Server-Address  $server_addr;
	}

	location /grafana {
		proxy_pass http://grafana.local:3000;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Server-Address  $server_addr;
	}

	location /kibana {
		proxy_pass http://elk.local:5601;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Server-Address  $server_addr;
	}

}

server {

	listen 443 ssl;

	server_name forcustomer.{{ domain.second }}{{ domain.first }};

	ssl_certificate /etc/letsencrypt/live/forcustomer.{{ domain.second }}{{ domain.first }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/forcustomer.{{ domain.second }}{{ domain.first }}/privkey.pem;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
		proxy_pass http://{{ ansible_facts.tun0.ipv4.address }}:8080;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Server-Address  $server_addr;
	}
}

server {

        listen 80 default_server;

        server_name "~^www\.(.*)$";

        if ($host = forcustomer.{{ domain.second }}{{ domain.first }}) {
                return 301 https://$host$request_uri;
        }

        return 301 https://{{ domain.second }}{{ domain.first }}$request_uri;
}
