---

- name: db - unzip roundcube.tar.gz
  unarchive:
    src: /share/roundcube.tar.gz
    dest: /tmp
    list_files: yes
  register: unzip

- name: db - create user
  postgresql_user:
    name: "{{ db.roundcube.user }}"
    password: "{{ db.roundcube.pass }}"
    role_attr_flags: SUPERUSER

- name: db - create db
  postgresql_db:
    name: "{{ db.roundcube.name }}"
    owner: "{{ db.roundcube.user }}"
    encoding: UTF-8

- name: db - grant privileges
  postgresql_privs:
    db: "{{ db.roundcube.name }}"
    privs: ALL
    type: database
    role: "{{ db.roundcube.user }}"

- name: db - question
  pause:
    prompt: "Need to restore dump (y - yes / other - no)?"
    echo: yes
  register: roundcube_dump

- name: db - restore db
  postgresql_db:
    name: "{{ db.roundcube.name }}"
    state: restore
    target: /tmp/{{ unzip.files[0] }}/SQL/postgres.initial.sql
    target_opts: pg_restore
  when: roundcube_dump.user_input == 'y'

- name: db - user auth conf
  postgresql_pg_hba:
    dest: /etc/postgresql/{{ db.ver }}/main/pg_hba.conf
    contype: host
    users: "{{ db.roundcube.user }}"
    databases: "{{ db.roundcube.name }}"
    source: "{{ vpn.gate }}/{{ vpn.prefix }}"
    method: md5
  notify:
    - handlers - reload postgresql service
